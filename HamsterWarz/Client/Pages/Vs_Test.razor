@page "/Vs_Test"
@using HamsterWarz.Shared
@inject IJSRuntime js;
@inject NavigationManager NavManager
@inject IHamsterService HamsterService
<PageTitle>HamsterWarz</PageTitle>
<link rel="stylesheet" type="text/css" href="css/app.css?version=0.1">
@if (Klar)
{
    GåTill();
}
else
{

    <Animate Animation="Animations.FlipUp" Duration="TimeSpan.FromSeconds(0.5)" @ref="myAnim" IsManual=false>
        <div hidden="@Hide1">

            <h1 class="text-center">Choose Your Hamster!</h1>
            <div class="container ">
                <div class="row">
                    <div class="col-sm-4 card">
                        <figure>
                            <img src="@ShowImage(HamsterService.GameHamster[0].ImgName)" onclick="@(()=>{Dold1(ShowImage(HamsterService.GameHamster[0].ImgName)); PlayAudioFile1(); Won=true; WarCry = true;update(HamsterService.GameHamster[1], false);
                                update(HamsterService.GameHamster[0], true); Hamster1Winner = false;})" class="img-fluid img-thumbnail" alt="Responsive image" />
                            <div class="card-body">
                                <h4 class="card-title">@HamsterService.GameHamster[0].Name</h4> @*TODO: Lägg till index*@
                                <p class="card-text">Age: @HamsterService.GameHamster[0].Age</p>@*TODO: Lägg till index*@
                                <p class="card-text">Loves: @HamsterService.GameHamster[0].Loves</p>@*TODO: Lägg till index*@
                                <p class="card-text">Favorite Food: @HamsterService.GameHamster[0].FavFood</p>@*TODO: Lägg till index*@
                            </div>
                        </figure>
                    </div>

                    <div id="Vs" class="col-sm-4">
                        <img src="Other_Pic/vs.png" class="img-fluid" alt="Responsive image" />
                    </div>

                    <div class="col-sm-4 card">
                        <figure>
                            <img src="@ShowImage(HamsterService.GameHamster[1].ImgName)" onclick="@(()=>{Dold1(@ShowImage(HamsterService.GameHamster[1].ImgName)); PlayAudioFile1();
                                update(HamsterService.GameHamster[0], false);update(HamsterService.GameHamster[1], true);Hamster2Winner = false;})" class="img-fluid img-thumbnail" alt="Responsive image" />
                            <div class="card-body">
                                <h4 class="card-title">@HamsterService.GameHamster[1].Name</h4> @*TODO: Lägg till index*@
                                <p class="card-text">Age: @HamsterService.GameHamster[1].Age</p>@*TODO: Lägg till index*@
                                <p class="card-text">Loves: @HamsterService.GameHamster[1].Loves</p>@*TODO: Lägg till index*@
                                <p class="card-text">Favorite Food: @HamsterService.GameHamster[1].FavFood</p>@*TODO: Lägg till index*@
                            </div>
                        </figure>
                    </div>
                </div>
            </div>
        </div>
    </Animate>


    <div hidden="@(!Hide2)">
        <div>
            <div class="Move inline-block">
                <img src="@ShowImage(HamsterService.GameHamster[0].ImgName)" width=200px height=200px />
            </div>

            <div class="Move2 inline-block">
                <img src="@ShowImage(HamsterService.GameHamster[1].ImgName)" width=200px height=200px />
            </div>
        </div>

        <div id="manipulate">
            <button class="inline-block btn btn-primary" onclick="@(()=>{Dold2(); PlayAudioFile2();})">
                Fight!!!
            </button>
        </div>
    </div>

   

      <div hidden="@(!Hide3)">
        <div class="container">
            <div class="row">

                <div class="col-sm-6">
                    <div hidden="@Hamster1Winner" class="text-center">
                        <h3>
                            Winner
                        </h3>
                    </div>
                    <div class="WinCard">
                        <div class="card" style="width:100">
                            <img src="@ShowImage(HamsterService.GameHamster[0].ImgName)" onclick="@(()=>{Dold3(); /*PlayAudioFile2()*/;})" class="card-img-top" />
                            <div class="card-body">
                                <h4 class="card-title">@HamsterService.GameHamster[0].Name</h4>
                                <p class="card-text">Wins: @HamsterService.GameHamster[0].Wins</p>
                                <p class="card-text">Losses: @HamsterService.GameHamster[0].Losses</p>
                            </div>
                        </div>
                    </div>
                </div>


                <div class="col-sm-6">
                    <div hidden="@Hamster2Winner" class="text-center">
                        <h3>
                            Winner
                        </h3>
                    </div>
                    <div class="WinCard">
                        <div class="card" style="width:100">
                            <img src="@ShowImage(HamsterService.GameHamster[1].ImgName)" onclick="@(()=>{Dold3(); /*PlayAudioFile2()*/;})" class="card-img-top" />
                            <div class="card-body">
                                          <h4 class="card-title">@HamsterService.GameHamster[1].Name</h4>
                                <p class="card-text">Wins: @HamsterService.GameHamster[1].Wins</p>
                                <p class="card-text">Losses: @HamsterService.GameHamster[1].Losses</p>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

}


@code {
    protected override async Task OnInitializedAsync()
    {
        await HamsterService.CreateGame();

    }

    private void update(Hamster hamster, bool won)
    {
        if (won == true)
        {
            hamster.Games += 1;
            hamster.Wins += 1;
            HamsterService.UpdateHamster(hamster);
        }
        else
        {
            hamster.Games += 1;
            hamster.Losses += 1;
            HamsterService.UpdateHamster(hamster);
        }

    }
    private string? imageSource;
    private string ShowImage(string imgName)
    {
        imageSource = $"/hamsters/{imgName}";
        return imageSource;
    }

    private Hamster hamster1 { get; set; }
    private Hamster hamster2 { get; set; }
    private string Temp;
    private bool Hide1 { get; set; } = false;
    private bool Hide2 { get; set; } = false;
    private bool Hide3 { get; set; } = false;
    private bool WarCry { get; set; } = false;
    private bool Won { get; set; } = false;
    private bool Hamster1Winner { get; set; } = true;
    private bool Hamster2Winner { get; set; } = true;
    private bool Klar = false;
    private Animate myAnim;
    private Random random = new Random();


    async Task PlayAudioFile1()
    {
        await js.InvokeVoidAsync("PlayAudioFile", $"/sounds/War.mp3");
    }

    async Task PlayAudioFile2()
    {
        await js.InvokeVoidAsync("PlayAudioFile", $"/sounds/{random.Next(1, 6)}.mp3");
    }

    private void Animation()
    {
        myAnim.Run();
    }


    private void GåTill()
    {
        NavManager.NavigateTo("/");
    }

    private void Dold1(string tempImg)
    {
        Temp = tempImg;

        Hide1 = !Hide1;
        Hide2 = !Hide2;
    }

    private void Dold2()
    {
        Hide2 = !Hide2;
        Hide3 = !Hide3;
        HamsterService.CreateGame();
    }

    private void Dold3()
    {
        Hide1 = !Hide1;
        Hide3 = !Hide3;
        WarCry = false;
        Hamster1Winner = true;
        Hamster2Winner = true;
    }


}
